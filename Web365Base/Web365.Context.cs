//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web365Base
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities365 : DbContext
    {
        public Entities365()
            : base("name=Entities365")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tblAdverties_Picture_Map> tblAdverties_Picture_Map { get; set; }
        public virtual DbSet<tblAdvertise> tblAdvertise { get; set; }
        public virtual DbSet<tblArticle> tblArticle { get; set; }
        public virtual DbSet<tblBooking> tblBooking { get; set; }
        public virtual DbSet<tblBookingType> tblBookingType { get; set; }
        public virtual DbSet<tblComment> tblComment { get; set; }
        public virtual DbSet<tblContact> tblContact { get; set; }
        public virtual DbSet<tblCustomer> tblCustomer { get; set; }
        public virtual DbSet<tblDetail> tblDetail { get; set; }
        public virtual DbSet<tblDistributor> tblDistributor { get; set; }
        public virtual DbSet<tblDomain> tblDomain { get; set; }
        public virtual DbSet<tblFile> tblFile { get; set; }
        public virtual DbSet<tblGroup_Article_Map> tblGroup_Article_Map { get; set; }
        public virtual DbSet<tblGroup_TypeArticle_Map> tblGroup_TypeArticle_Map { get; set; }
        public virtual DbSet<tblGroupArticle> tblGroupArticle { get; set; }
        public virtual DbSet<tblGroupOfService> tblGroupOfService { get; set; }
        public virtual DbSet<tblGroupTypeArticle> tblGroupTypeArticle { get; set; }
        public virtual DbSet<tblLanguage> tblLanguage { get; set; }
        public virtual DbSet<tblLayoutContent> tblLayoutContent { get; set; }
        public virtual DbSet<tblManufacturer> tblManufacturer { get; set; }
        public virtual DbSet<tblMenu> tblMenu { get; set; }
        public virtual DbSet<tblOrder> tblOrder { get; set; }
        public virtual DbSet<tblOrder_Shipping> tblOrder_Shipping { get; set; }
        public virtual DbSet<tblOrder_Status> tblOrder_Status { get; set; }
        public virtual DbSet<tblOrderDetail> tblOrderDetail { get; set; }
        public virtual DbSet<tblPage> tblPage { get; set; }
        public virtual DbSet<tblPicture> tblPicture { get; set; }
        public virtual DbSet<tblProduct> tblProduct { get; set; }
        public virtual DbSet<tblProduct_Attribute_Map> tblProduct_Attribute_Map { get; set; }
        public virtual DbSet<tblProduct_Status_Map> tblProduct_Status_Map { get; set; }
        public virtual DbSet<tblProduct_Variant> tblProduct_Variant { get; set; }
        public virtual DbSet<tblProductAttribute> tblProductAttribute { get; set; }
        public virtual DbSet<tblProductFilter> tblProductFilter { get; set; }
        public virtual DbSet<tblProductGroupAttribute> tblProductGroupAttribute { get; set; }
        public virtual DbSet<tblProductLabel> tblProductLabel { get; set; }
        public virtual DbSet<tblProductStatus> tblProductStatus { get; set; }
        public virtual DbSet<tblProductType_Group_Map> tblProductType_Group_Map { get; set; }
        public virtual DbSet<tblProductTypeGroup> tblProductTypeGroup { get; set; }
        public virtual DbSet<tblReceiveInfo> tblReceiveInfo { get; set; }
        public virtual DbSet<tblReceiveInfoGroup> tblReceiveInfoGroup { get; set; }
        public virtual DbSet<tblService> tblService { get; set; }
        public virtual DbSet<tblServiceDetail> tblServiceDetail { get; set; }
        public virtual DbSet<tblStepOfService> tblStepOfService { get; set; }
        public virtual DbSet<tblSupport> tblSupport { get; set; }
        public virtual DbSet<tblTypeArticle> tblTypeArticle { get; set; }
        public virtual DbSet<tblTypeFile> tblTypeFile { get; set; }
        public virtual DbSet<tblTypeLog> tblTypeLog { get; set; }
        public virtual DbSet<tblTypePicture> tblTypePicture { get; set; }
        public virtual DbSet<tblTypeProduct> tblTypeProduct { get; set; }
        public virtual DbSet<tblTypeSupport> tblTypeSupport { get; set; }
        public virtual DbSet<tblTypeVideo> tblTypeVideo { get; set; }
        public virtual DbSet<tblVideo> tblVideo { get; set; }
    
        [DbFunction("Entities365", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string stringToSplit, string key)
        {
            var stringToSplitParameter = stringToSplit != null ?
                new ObjectParameter("stringToSplit", stringToSplit) :
                new ObjectParameter("stringToSplit", typeof(string));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[Entities365].[SplitString](@stringToSplit, @key)", stringToSplitParameter, keyParameter);
        }
    
        [DbFunction("Entities365", "SplitStringWithOrder")]
        public virtual IQueryable<SplitStringWithOrder_Result> SplitStringWithOrder(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitStringWithOrder_Result>("[Entities365].[SplitStringWithOrder](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<PRC_AllChildTypeNews_Result> PRC_AllChildTypeNews(string categoryAscii)
        {
            var categoryAsciiParameter = categoryAscii != null ?
                new ObjectParameter("CategoryAscii", categoryAscii) :
                new ObjectParameter("CategoryAscii", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_AllChildTypeNews_Result>("PRC_AllChildTypeNews", categoryAsciiParameter);
        }
    
        public virtual ObjectResult<PRC_AllChildTypeNewsByArrID_Result> PRC_AllChildTypeNewsByArrID(string listID)
        {
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_AllChildTypeNewsByArrID_Result>("PRC_AllChildTypeNewsByArrID", listIDParameter);
        }
    
        public virtual ObjectResult<PRC_AllChildTypePicureByArrID_Result> PRC_AllChildTypePicureByArrID(string listID)
        {
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_AllChildTypePicureByArrID_Result>("PRC_AllChildTypePicureByArrID", listIDParameter);
        }
    
        public virtual int PRC_File_GetFileByType(Nullable<int> typeID, string typeAscii, Nullable<int> skip, Nullable<int> top, ObjectParameter total)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var typeAsciiParameter = typeAscii != null ?
                new ObjectParameter("TypeAscii", typeAscii) :
                new ObjectParameter("TypeAscii", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("Skip", skip) :
                new ObjectParameter("Skip", typeof(int));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_File_GetFileByType", typeIDParameter, typeAsciiParameter, skipParameter, topParameter, total);
        }
    
        public virtual ObjectResult<PRC_FilterByParentAscii_Result> PRC_FilterByParentAscii(string ascii, Nullable<int> languageId)
        {
            var asciiParameter = ascii != null ?
                new ObjectParameter("Ascii", ascii) :
                new ObjectParameter("Ascii", typeof(string));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_FilterByParentAscii_Result>("PRC_FilterByParentAscii", asciiParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<PRC_FilterByParentId_Result> PRC_FilterByParentId(string listID, Nullable<int> languageId)
        {
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_FilterByParentId_Result>("PRC_FilterByParentId", listIDParameter, languageIdParameter);
        }
    
        public virtual int PRC_GetListNewsByType(Nullable<int> typeID, string typeAscii, Nullable<int> language, Nullable<int> currentRecord, Nullable<int> pageSize, ObjectParameter total)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var typeAsciiParameter = typeAscii != null ?
                new ObjectParameter("TypeAscii", typeAscii) :
                new ObjectParameter("TypeAscii", typeof(string));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("CurrentRecord", currentRecord) :
                new ObjectParameter("CurrentRecord", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_GetListNewsByType", typeIDParameter, typeAsciiParameter, languageParameter, currentRecordParameter, pageSizeParameter, total);
        }
    
        public virtual int PRC_GetListProductByType(Nullable<int> typeID, string typeAscii, Nullable<int> language, Nullable<int> currentRecord, Nullable<int> pageSize, ObjectParameter total)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var typeAsciiParameter = typeAscii != null ?
                new ObjectParameter("TypeAscii", typeAscii) :
                new ObjectParameter("TypeAscii", typeof(string));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            var currentRecordParameter = currentRecord.HasValue ?
                new ObjectParameter("CurrentRecord", currentRecord) :
                new ObjectParameter("CurrentRecord", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_GetListProductByType", typeIDParameter, typeAsciiParameter, languageParameter, currentRecordParameter, pageSizeParameter, total);
        }
    
        public virtual ObjectResult<PRC_GetMenu_Result> PRC_GetMenu(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_GetMenu_Result>("PRC_GetMenu", userIdParameter);
        }
    
        public virtual ObjectResult<PRC_GetProducts_Result> PRC_GetProducts(Nullable<int> page, Nullable<int> pageSize, Nullable<int> orderBy, ObjectParameter total)
        {
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_GetProducts_Result>("PRC_GetProducts", pageParameter, pageSizeParameter, orderByParameter, total);
        }
    
        public virtual int PRC_InsertFilterForProduct(Nullable<int> productId, string filterId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var filterIdParameter = filterId != null ?
                new ObjectParameter("FilterId", filterId) :
                new ObjectParameter("FilterId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_InsertFilterForProduct", productIdParameter, filterIdParameter);
        }
    
        public virtual int PRC_InsertLabelForProduct(Nullable<int> productId, Nullable<int> labelId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var labelIdParameter = labelId.HasValue ?
                new ObjectParameter("LabelId", labelId) :
                new ObjectParameter("LabelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_InsertLabelForProduct", productIdParameter, labelIdParameter);
        }
    
        public virtual int PRC_InsertPageForRole(string roleId, Nullable<int> pageId)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_InsertPageForRole", roleIdParameter, pageIdParameter);
        }
    
        public virtual int PRC_InsertRoleForUser(string userId, string roleId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_InsertRoleForUser", userIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<PRC_MenuByParentId_Result> PRC_MenuByParentId(string listID)
        {
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_MenuByParentId_Result>("PRC_MenuByParentId", listIDParameter);
        }
    
        public virtual int PRC_Picture_GetPictureByType(Nullable<int> typeID, string typeAscii, Nullable<int> skip, Nullable<int> top, ObjectParameter total)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var typeAsciiParameter = typeAscii != null ?
                new ObjectParameter("TypeAscii", typeAscii) :
                new ObjectParameter("TypeAscii", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("Skip", skip) :
                new ObjectParameter("Skip", typeof(int));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_Picture_GetPictureByType", typeIDParameter, typeAsciiParameter, skipParameter, topParameter, total);
        }
    
        public virtual ObjectResult<PRC_Product_GetAllChildTypeByParentID_Result> PRC_Product_GetAllChildTypeByParentID(Nullable<int> parent)
        {
            var parentParameter = parent.HasValue ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRC_Product_GetAllChildTypeByParentID_Result>("PRC_Product_GetAllChildTypeByParentID", parentParameter);
        }
    
        public virtual int PRC_Product_GetProductByType(Nullable<int> typeID, string typeAscii, Nullable<int> skip, Nullable<int> top, ObjectParameter total)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var typeAsciiParameter = typeAscii != null ?
                new ObjectParameter("TypeAscii", typeAscii) :
                new ObjectParameter("TypeAscii", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("Skip", skip) :
                new ObjectParameter("Skip", typeof(int));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_Product_GetProductByType", typeIDParameter, typeAsciiParameter, skipParameter, topParameter, total);
        }
    
        public virtual int PRC_ResetFileProduct(Nullable<int> productID, string listID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_ResetFileProduct", productIDParameter, listIDParameter);
        }
    
        public virtual int PRC_ResetPictureArticle(Nullable<int> articleID, string listID)
        {
            var articleIDParameter = articleID.HasValue ?
                new ObjectParameter("ArticleID", articleID) :
                new ObjectParameter("ArticleID", typeof(int));
    
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_ResetPictureArticle", articleIDParameter, listIDParameter);
        }
    
        public virtual int PRC_ResetPictureProduct(Nullable<int> productID, string listID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_ResetPictureProduct", productIDParameter, listIDParameter);
        }
    
        public virtual int PRC_ResetPictureProductType(Nullable<int> typeID, string listID)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_ResetPictureProductType", typeIDParameter, listIDParameter);
        }
    
        public virtual int PRC_ResetPictureStepService(Nullable<int> serviceID, string listID)
        {
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(int));
    
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PRC_ResetPictureStepService", serviceIDParameter, listIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
